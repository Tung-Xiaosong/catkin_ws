<?xml version="1.0"?>
<robot name="mbot" params="robot_name:robot_name"  xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- PROPERTY LIST --><!-- 常量列表 -->
    <xacro:property name="M_PI" value="3.1415926"/>
    <xacro:property name="base_mass"   value="20" /> 
    <xacro:property name="base_radius" value="0.20"/>
    <xacro:property name="base_length" value="0.16"/>

    <xacro:property name="wheel_mass"   value="2" />
    <xacro:property name="wheel_radius" value="0.06"/>
    <xacro:property name="wheel_length" value="0.025"/>
    <xacro:property name="wheel_joint_y" value="0.19"/>
    <xacro:property name="wheel_joint_z" value="0.05"/>

    <xacro:property name="caster_mass"    value="0.5" /> 
    <xacro:property name="caster_radius"  value="0.015"/> <!-- wheel_radius - ( base_length/2 - wheel_joint_z) -->
    <xacro:property name="caster_joint_x" value="0.18"/>

    <!-- Defining the colors used in this robot --> <!-- 颜色定义 -->
    <material name="yellow">
        <color rgba="1 0.4 0 1"/>
    </material>
    <material name="black">
        <color rgba="0 0 0 0.95"/>
    </material>
    <material name="gray">
        <color rgba="0.75 0.75 0.75 1"/>
    </material>
    
    <!-- Macro for inertia matrix --><!-- 球形转动惯量矩阵宏定义-->
    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                iyy="${2*m*r*r/5}" iyz="0" 
                izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>
    <!-- 圆柱体转动惯量矩阵宏定义-->
    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                izz="${m*r*r/2}" /> 
        </inertial>
    </xacro:macro>
    <!-- Macro for robot wheel --> <!-- 车轮宏定义 -->
    <xacro:macro name="wheel" params="prefix reflect robot_name"><!--*********************************-->
        <joint name="${robot_name}_${prefix}_wheel_joint" type="continuous">
            <origin xyz="0 ${reflect*wheel_joint_y} ${-wheel_joint_z}" rpy="0 0 0"/>
            <parent link="${robot_name}_base_link"/>
            <child link="${robot_name}_${prefix}_wheel_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${robot_name}_${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
                <material name="gray" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
            </collision>
            <xacro:cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" /><!--xacro-->
        </link>

        <gazebo reference="${robot_name}_${prefix}_wheel_link">
            <material>Gazebo/Gray</material>
        </gazebo>
    </xacro:macro>

    <!-- Macro for robot caster --><!-- 支撑轮宏定义 -->
    <xacro:macro name="caster" params="prefix reflect robot_name"><!--*********************************-->
        <joint name="${robot_name}_${prefix}_caster_joint" type="continuous">
            <origin xyz="${reflect*caster_joint_x} 0 ${-(base_length/2 + caster_radius)}" rpy="0 0 0"/>
            <parent link="${robot_name}_base_link"/>
            <child link="${robot_name}_${prefix}_caster_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${robot_name}_${prefix}_caster_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
                <material name="black" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
            </collision>      
            <xacro:sphere_inertial_matrix  m="${caster_mass}" r="${caster_radius}" /><!--xacro-->
        </link>

        <gazebo reference="${robot_name}_${prefix}_caster_link">
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>

    <xacro:macro name="mbot_multi_base_gazebo" params="robot_name"><!--*********************************-->
        <link name="${robot_name}_base_footprint">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.001 0.001 0.001" />
                </geometry>
            </visual>
        </link>
        <gazebo reference="${robot_name}_base_footprint">
            <turnGravityOff>false</turnGravityOff>
        </gazebo>

        <joint name="${robot_name}_base_footprint_joint" type="fixed">
            <origin xyz="0 0 ${base_length/2 + caster_radius*2}" rpy="0 0 0" />        
            <parent link="${robot_name}_base_footprint"/>
            <child link="${robot_name}_base_link" />
        </joint>

        <link name="${robot_name}_base_link">
            <visual>
                <origin xyz=" 0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder length="${base_length}" radius="${base_radius}"/>
                </geometry>
                <material name="yellow" />
            </visual>
            <collision>
                <origin xyz=" 0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder length="${base_length}" radius="${base_radius}"/>
                </geometry>
            </collision>   
            <xacro:cylinder_inertial_matrix  m="${base_mass}" r="${base_radius}" h="${base_length}" /><!--xacro-->
        </link>

        <gazebo reference="${robot_name}_base_link">
            <material>Gazebo/Blue</material>
        </gazebo>

        <xacro:wheel prefix="left"  reflect="-1" robot_name="${robot_name}"/><!--***************************-->
        <xacro:wheel prefix="right" reflect="1" robot_name="${robot_name}"/>

        <xacro:caster prefix="front" reflect="-1" robot_name="${robot_name}"/>
        <xacro:caster prefix="back"  reflect="1" robot_name="${robot_name}"/>

        <!-- controller -->
        <gazebo>
            <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
                <rosDebugLevel>Debug</rosDebugLevel>
                <publishWheelTF>false</publishWheelTF>
                <robotNamespace>/</robotNamespace>
                <publishTf>1</publishTf>
                <publishWheelJointState>true</publishWheelJointState>
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <legacyMode>true</legacyMode>
                <leftJoint>${robot_name}_left_wheel_joint</leftJoint>
                <rightJoint>${robot_name}_right_wheel_joint</rightJoint>
                <wheelSeparation>${wheel_joint_y*2}</wheelSeparation>
                <wheelDiameter>${2*wheel_radius}</wheelDiameter>
                <broadcastTF>true</broadcastTF>
                <wheelTorque>30</wheelTorque>
                <wheelAcceleration>1.8</wheelAcceleration>
                <commandTopic>${robot_name}/cmd_vel</commandTopic>
                <odometryFrame>${robot_name}/odom</odometryFrame> 
                <odometryTopic>${robot_name}/odom</odometryTopic> 
                <robotBaseFrame>${robot_name}_base_footprint</robotBaseFrame>
            </plugin>
        </gazebo> 
    </xacro:macro>

</robot>
